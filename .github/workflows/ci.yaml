---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  list-node-projects:
    name: list node projects
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.list-projects.outputs.PROJECTS }}
    steps:
      - uses: actions/checkout@v3
      - name: List node projects
        id: list-projects
        run: echo "PROJECTS=$(find . -name "package.json" -exec dirname {} \; | grep -v node_modules | jq --raw-input --slurp -c 'split("\n") | .[0:-1]')" >> $GITHUB_OUTPUT

  list-python-projects:
    name: list python projects
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.list-projects.outputs.PROJECTS }}
    steps:
      - uses: actions/checkout@v3
      - name: List python projects
        id: list-projects
        run: echo "PROJECTS=$(find . -name "pyproject.toml" -exec dirname {} \; | jq --raw-input --slurp -c 'split("\n") | .[0:-1]')" >> $GITHUB_OUTPUT

  python-tests:
    name: run python tests
    runs-on: ubuntu-latest
    needs: list-python-projects
    strategy:
      matrix:
        project: ${{ fromJson(needs.list-python-projects.outputs.projects) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pushd ${{ matrix.project }}
          test -f requirements.txt && pip install -r requirements.txt
          test -f requirements-dev.txt && pip install -r requirements-dev.txt
      - name: Run tests
        run: |
          pushd ${{ matrix.project }}
          python -m pytest
      - name: Report coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.project }}/coverage.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          verbose: true

  node-tests:
    name: run node tests
    runs-on: ubuntu-latest
    needs: list-node-projects
    strategy:
      matrix:
        project: ${{ fromJson(needs.list-node-projects.outputs.projects) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: |
          pushd ${{ matrix.project }}
          npm install
      - name: Run tests
        run: |
          pushd ${{ matrix.project }}
          npm run ci
      - name: Report coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.project }}/coverage/reports/report-lcov/lcov.info
          fail_ci_if_error: false
          verbose: true
